version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: photo_battle
    ports:
      - "5460:5432"
    volumes:
      - postg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  backend:
    build:
      context: ./Backend
      dockerfile: backend.dockerfile
    container_name: backend_app
    restart: always
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/photo_battle"
      HOST: "0.0.0.0"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5700:5700"
    volumes:
      - ./Backend/uploads:/app/uploads
    networks:
      - app_network

  frontend:
    build:
      context: ./Frontend
      dockerfile: frontend.dockerfile
    container_name: frontend_app
    restart: always
    ports:
      - "5600:80"
    environment:
      HOST: "0.0.0.0"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postg_data: